import pandas as pd

def find_offsetting_pairs_with_account_check(df, amount_col='adj_amount', grca_cols=None, tol=1e-6):
    """
    Find +ve/-ve offsetting pairs for the same GRCA account and record what changed.
    Now returns two separate columns:
        1. changed_fields  -> which GRCA columns changed
        2. changed_values  -> from → to details for those fields
    """
    if grca_cols is None:
        grca_cols = [c for c in df.columns if 'custom_grca' in c.lower()]

    df = df.copy()
    df['_abs_amt'] = df[amount_col].abs()
    results = []

    for (acct, amt), g in df.groupby(['grca_account', '_abs_amt']):
        neg = g[g[amount_col] < -tol]
        pos = g[g[amount_col] > tol]

        if len(neg) > 0 and len(pos) > 0:
            for _, neg_row in neg.iterrows():
                for _, pos_row in pos.iterrows():
                    change = {
                        'grca_account': acct,
                        'abs_amount': amt,
                        'adj_description': pos_row.get('adj_description', None)
                    }

                    changed_fields = []
                    changed_values = []

                    for col in grca_cols:
                        from_val = str(neg_row[col]).strip().lower()
                        to_val = str(pos_row[col]).strip().lower()

                        # Normalize 'none'
                        if 'none' in from_val:
                            from_val = None
                        if 'none' in to_val:
                            to_val = None

                        if from_val != to_val:
                            changed_fields.append(col)
                            changed_values.append(f"{col}: {from_val} → {to_val}")

                    if changed_fields:
                        change['changed_fields'] = ', '.join(changed_fields)
                        change['changed_values'] = ' | '.join(changed_values)
                        results.append(change)

    return pd.DataFrame(results).reset_index(drop=True)

