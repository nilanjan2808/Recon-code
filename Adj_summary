import pandas as pd

def prep_data(df: pd.DataFrame, custom_prefix: str = "custom_cde", id_col: str = "grca_id", amount_col: str = "adj_amount") -> pd.DataFrame:
    """
    Cleans and prepares the input dataframe.
    Steps:
    1. Combine all custom_cde columns (or given prefix) into a single 'attribute' column.
    2. Drop rows where attribute contains 'none' (case insensitive).
    3. Drop rows where id_col is missing or amount_col = 0.
    """

    # Identify custom columns dynamically
    custom_cols = [col for col in df.columns if custom_prefix.lower() in col.lower()]

    # Melt to long format to combine attributes
    df_long = df.melt(
        id_vars=[c for c in df.columns if c not in custom_cols],
        value_vars=custom_cols,
        var_name="custom_cde",
        value_name="attribute"
    )

    # Clean attribute values
    df_long["attribute"] = df_long["attribute"].astype(str).str.strip().str.lower()
    df_long = df_long[~df_long["attribute"].str.contains("none", na=True)]

    # Drop invalid rows
    df_long = df_long.dropna(subset=[id_col])
    df_long = df_long[df_long[amount_col] != 0]

    return df_long


def summary_by_attribute(df: pd.DataFrame) -> pd.DataFrame:
    """Summarize adjustment by attribute."""
    result = (df.groupby("attribute")
                .agg(count=("adj_amount", "size"), total_adj_amount=("adj_amount", "sum"))
                .reset_index()
                .sort_values(["count", "total_adj_amount"], ascending=[False, False]))
    return result


def summary_by_grca(df: pd.DataFrame) -> pd.DataFrame:
    """Summarize adjustment by grca_id."""
    result = (df.groupby("grca_id")
                .agg(count=("adj_amount", "size"), total_adj_amount=("adj_amount", "sum"))
                .reset_index()
                .sort_values(["count", "total_adj_amount"], ascending=[False, False]))
    return result


def summary_by_desc(df: pd.DataFrame) -> pd.DataFrame:
    """Summarize adjustment by adjustment_desc."""
    result = (df.groupby("adjustment_desc")
                .agg(count=("adj_amount", "size"), total_adj_amount=("adj_amount", "sum"))
                .reset_index()
                .sort_values(["count", "total_adj_amount"], ascending=[False, False]))
    return result
